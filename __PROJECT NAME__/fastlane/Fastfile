require("dotenv")
Dotenv.load
default_platform(:ios)

platform :ios do
  desc "Check, download and install certifications and provisioning profiles"
  lane :download_certs_and_provisioning_profiles do
    # Development Cert.
    cert(
      development: true,
      username: "#{ENV['APPLE_ID']}",
      output_path: "./code_signing/certs/development",
    )

    # Distrubution Cert.
    cert(
      username: "#{ENV['APPLE_ID']}",
      output_path: "./code_signing/certificates/distribution",
    )

    # Development Mobile Provisioning ( DEBUG )
    sigh(
      development: true,
      username: "#{ENV['APPLE_ID']}",
      app_identifier: "#{ENV['BUNDLE_ID_DEBUG']}",
      output_path: "./code_signing/profiles/development",
    )

    # Ad-Hoc Mobile Provisioning ( STAGING )
    sigh(
      adhoc: true,
      username: "#{ENV['APPLE_ID']}",
      app_identifier: "#{ENV['BUNDLE_ID_STAGING']}",
      output_path: "./code_signing/profiles/adhoc",
    )

    # AppStore Mobile Provisioning ( RELEASE )
    sigh(
      username: "#{ENV['APPLE_ID']}",
      app_identifier: "#{ENV['BUNDLE_ID']}",
      output_path: "./code_signing/profiles/appstore",
    )
  end

  desc "Create App IDs and Code Signing"
  lane :create_app_id_and_code_signing do
    ## DEBUG
    create_app_on_developer_portal(
      app_identifier: "#{ENV['BUNDLE_ID_DEBUG']}",
      app_name: "#{ENV['SCHEME_NAME_DEBUG']}",
    )
    ## STAGING
    create_app_on_developer_portal(
      app_identifier: "#{ENV['BUNDLE_ID_STAGING']}",
      app_name: "#{ENV['SCHEME_NAME_STAGING']}",
    )
    ## RELEASE
    create_app_on_developer_portal(
      app_identifier: "#{ENV['BUNDLE_ID']}",
      app_name: "#{ENV['SCHEME_NAME']}",
    )
    download_certs_and_provisioning_profiles()
  end

  desc "Create new iOS apps on iTunes Connect and Dev Portal"
  private_lane :create_app_on_developer_portal do |options|
    produce(
      username: "#{ENV['APPLE_ID']}",
      app_identifier: options[:app_identifier],
      app_name: options[:app_name],
      language: options[:language] || "English",
      app_version: options[:app_version] || "1.0",
      sku: options[:sku],
      team_name: options[:team_name],
      skip_itc: true,
    )
  end

  desc "clear build and deriveData"
  lane :clear_all do
    clean_cocoapods_cache
    clean_build_artifacts
    clear_derived_data(derived_data_path: 'derivedData')
    sh "rm -rf #{ENV['PWD']}/derivedData/*"
    sh "rm -rf #{ENV['PWD']}/build/*"
    clear_targets
  end
end
