<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Kind</key>
	<string>Xcode.Xcode3.ProjectTemplateUnitKind</string>
	<key>Identifier</key>
	<string>co.nimblehq.dt.unit.singleViewApplication</string>
	<key>Ancestors</key>
	<array>
		<string>co.nimble.dt.unit.cocoaTouchApplicationBase</string>
	</array>
	<key>Concrete</key>
	<true/>
	<key>Description</key>
	<string>This template provides a starting point for an application that uses a single view.</string>
	<key>SortOrder</key>
	<integer>1</integer>
	<key>Options</key>
	<array>
		<dict>
			<key>Default</key>
			<string>Swift</string>
			<key>Identifier</key>
			<string>languageChoice</string>
			<key>Units</key>
			<dict>
				<key>Objective-C</key>
				<dict>
					<key>Nodes</key>
					<array>
						<string>ViewController.h:comments</string>
						<string>ViewController.h:imports:importCocoa</string>
						<string>ViewController.h:interface(___FILEBASENAME___ : UIViewController)</string>
						<string>ViewController.m:comments</string>
						<string>ViewController.m:imports:importHeader:ViewController.h</string>
						<string>ViewController.m:extension</string>
						<string>ViewController.m:implementation:methods:viewDidLoad(- (void\)viewDidLoad)</string>
						<string>ViewController.m:implementation:methods:viewDidLoad:super</string>
						<string>Info.plist:UIApplicationSceneManifest:UISceneStoryboardFile</string>
					</array>
				</dict>
				<key>Swift</key>
				<array>
					<dict>
						<key>RequiredOptions</key>
						<dict>
							<key>userInterface</key>
							<string>UI Programmatically</string>
						</dict>
						<key>Nodes</key>
						<array>
							<string>Application/AppDelegate/Application.AppDelegate.swift</string>
         			<string>Application/Constants/Constants.swift</string>
         			<string>Application/Entitlements/Entitlements.swift</string>
         			<string>Application/Localizations/Localizations.swift</string>
         			<string>Application/Resources/Resource.swift</string>
         			<string>Extensions/Extensions.swift</string>
         			<string>Models/Models.swift</string>
         			<string>Modules/Modules.swift</string>
         			<string>Protocols/Protocols.swift</string>
         			<string>Services/Services.swift</string>
         			<string>Utilities/Utilities.swift</string>
 							<string>Views/View.swift</string>
							<string>Info.plist:UIApplicationSceneManifest:UISceneStoryboardFile</string>
						</array>
						<key>Definitions</key>
						<dict>
							<key>Application/AppDelegate/Application.AppDelegate.swift</key>
							<dict>
								<key>Group</key>
								<array>
									<string>Application</string>
									<string>AppDelegate</string>
								</array>
							</dict>
							<key>Application/Constants/Constants.swift</key>
							<dict>
								<key>Group</key>
								<array>
									<string>Application</string>
									<string>Constants</string>
								</array>
							</dict>
							<key>Application/Entitlements/Entitlements.swift</key>
							<dict>
								<key>Group</key>
								<array>
									<string>Application</string>
									<string>Entitlements</string>
								</array>
							</dict>
							<key>Application/Localizations/Localizations.swift</key>
							<dict>
								<key>Group</key>
								<array>
									<string>Application</string>
									<string>Localizations</string>
								</array>
							</dict>
							<key>Application/Resources/Resource.swift</key>
							<dict>
								<key>Group</key>
								<array>
									<string>Application</string>
									<string>Resources</string>
								</array>
							</dict>
							<key>Extensions/Extensions.swift</key>
							<dict>
								<key>Group</key>
								<string>Extensions</string>
							</dict>
							<key>Models/Models.swift</key>
							<dict>
								<key>Group</key>
								<string>Models</string>
							</dict>
							<key>Modules/Modules.swift</key>
							<dict>
								<key>Group</key>
								<string>Modules</string>
							</dict>
							<key>Protocols/Protocols.swift</key>
							<dict>
								<key>Group</key>
								<string>Protocols</string>
							</dict>
							<key>Services/Services.swift</key>
							<dict>
								<key>Group</key>
								<string>Services</string>
							</dict>
							<key>Utilities/Utilities.swift</key>
							<dict>
								<key>Group</key>
								<string>Utilities</string>
							</dict>
							<key>Views/View.swift</key>
							<dict>
								<key>Group</key>
								<string>Views</string>
							</dict>
						</dict>
					</dict>
					<dict>
						<key>RequiredOptions</key>
						<dict>
							<key>userInterface</key>
							<string>SwiftUI</string>
							<key>appLifecycle</key>
							<string>Cocoa</string>
						</dict>
						<key>Nodes</key>
						<array>
							<string>Preview Content/Preview Assets.xcassets</string>
							<string>SceneDelegate.swift:imports:importSwiftUI</string>
							<string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</string>
							<string>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</string>
						</array>
						<key>Definitions</key>
						<dict>
							<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body</key>
							<string>
// Create the SwiftUI view that provides the window contents.
let contentView = ContentView()
</string>
							<key>SceneDelegate.swift:implementation:methods:sceneWillConnectToSession:body:windowScene</key>
							<string>
// Use a UIHostingController as window root view controller.
if let windowScene = scene as? UIWindowScene {
    let window = UIWindow(windowScene: windowScene)
    window.rootViewController = UIHostingController(rootView: contentView)
    self.window = window
    window.makeKeyAndVisible()
}</string>
							<key>*:imports:importSwiftUI</key>
							<string>import SwiftUI</string>
						</dict>
						<key>Targets</key>
						<array>
							<dict>
								<key>SharedSettings</key>
								<dict>
									<key>ENABLE_PREVIEWS</key>
									<string>YES</string>
									<key>DEVELOPMENT_ASSET_PATHS</key>
									<string>___PACKAGENAMEPREVIEWCONTENT:quoteIfNeeded___</string>
								</dict>
							</dict>
						</array>
					</dict>
				</array>
			</dict>
		</dict>
		<dict>
			<key>Identifier</key>
			<string>userInterface</string>
			<key>Name</key>
			<string>Interface:</string>
			<key>Description</key>
			<string>The type of user interface.</string>
			<key>Values</key>
			<array>
				<string>SwiftUI</string>
				<string>UI Programmatically</string>
			</array>
			<key>Default</key>
			<string>UI Programmatically</string>
			<key>Type</key>
			<string>popup</string>
		</dict>
	</array>
</dict>
</plist>
